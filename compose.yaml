services:
  traefik:
    image: traefik:2.11.14
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - flask_network

  frontend:
    build:
      context: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - flask_network

  app:
    build:
      context: ./app
    ports:
      - "5000:5000"
    labels:
      - "traefik.http.routers.app.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.app.loadbalancer.server.port=5000"
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - flask_network

  db:
    image: postgres:13
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - flask_network

networks:
  flask_network:
  
volumes:
  db-data: